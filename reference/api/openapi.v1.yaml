openapi: 3.0.3
info:
  version: 0.2.0
  title: Ratecard API
  description: 'Integrate Ratecard directly with your applications through via the Ratecard [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer) API. In this documentation you will find all the resources you''ll need to connect to our API.'
  contact:
    name: Ratecard Support
    url: 'https://support.ratecard.io/'
    email: support@ratecard.io
  termsOfService: 'https://ratecard.io/general-terms'
servers:
  - url: 'https://api.ratecard.io/v1'
security:
  - bearerAuth: []
tags:
  - name: Contacts
  - name: Groups
  - name: Accounts
  - name: Teams
  - name: Users
  - name: Webhooks
  - name: Messages
  - name: Feedback
paths:
  /contacts:
    get:
      summary: List of contacts
      description: This is the list of contacts
      operationId: listContacts
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/showParam'
      responses:
        '200':
          description: Paginated contact response
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: ./models/contact.v1.yaml
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'https://api.ratecard.io/v1/contacts?page=1'
                      last:
                        type: string
                        example: 'https://api.ratecard.io/v1/contacts?page=100'
                      prev:
                        type: string
                        nullable: true
                        example: 'https://api.ratecard.io/v1/contacts?page=1'
                      next:
                        type: string
                        nullable: true
                        example: 'https://api.ratecard.io/v1/contacts?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 2
                      from:
                        type: integer
                        example: 2
                      last_page:
                        type: integer
                        example: 10
                      path:
                        type: string
                        example: 'https://api.ratecard.io/v1/contacts'
                      per_page:
                        type: integer
                        example: 1
                      to:
                        type: integer
                        example: 2
                      total:
                        type: integer
                        example: 100
    post:
      summary: Add a new contact
      description: Description
      operationId: addContact
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - first_name
                - last_name
                - email
              properties:
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
                email:
                  type: string
                  example: johndoe@ratecard.io
                phone:
                  type: string
                  example: '0612345678'
                subscribed:
                  type: boolean
                  example: true
                anonymous:
                  type: boolean
                  example: false
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/contact.v1.yaml
          links:
            GetContactById:
              operationId: getContact
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `GET /contacts/{id}`.
            UpdateContactById:
              operationId: updateContact
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `PUT /contacts/{id}`.
            DeleteContactById:
              operationId: deleteContact
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `DELETE /contacts/{id}`.
  '/contacts/{id}':
    get:
      summary: Retrieve a contact
      description: Description
      operationId: getContact
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
        - in: path
          name: id
          description: id of the contact
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Contact response
          content:
            application/json:
              schema:
                $ref: ./models/contact.v1.yaml
          links:
            UpdateContactById:
              operationId: updateContact
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `PUT /contacts/{id}`.
            DeleteContactById:
              operationId: deleteContact
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `DELETE /contacts/{id}`.
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Update a contact
      description: Description
      operationId: updateContact
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
        - in: path
          name: id
          description: id of the contact
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
                email:
                  type: string
                  example: johndoe@ratecard.io
                phone:
                  type: string
                  example: '0612345678'
                subscribed:
                  type: boolean
                  example: true
                anonymous:
                  type: boolean
                  example: false
      responses:
        '204':
          description: Contact updated response
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a contact
      description: Description
      operationId: deleteContact
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
        - in: path
          name: id
          description: id of the contact
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Contact deleted response
        '404':
          $ref: '#/components/responses/404'
  /groups:
    get:
      summary: List of groups
      description: Description
      operationId: listGroups
      tags:
        - Groups
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/showParam'
      responses:
        '200':
          description: Paginated group response
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: ./models/group.v1.yaml
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'https://api.ratecard.io/v1/groups?page=1'
                      last:
                        type: string
                        example: 'https://api.ratecard.io/v1/groups?page=100'
                      prev:
                        type: string
                        nullable: true
                        example: 'https://api.ratecard.io/v1/groups?page=1'
                      next:
                        type: string
                        nullable: true
                        example: 'https://api.ratecard.io/v1/groups?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 2
                      from:
                        type: integer
                        example: 2
                      last_page:
                        type: integer
                        example: 10
                      path:
                        type: string
                        example: 'https://api.ratecard.io/v1/groups'
                      per_page:
                        type: integer
                        example: 1
                      to:
                        type: integer
                        example: 2
                      total:
                        type: integer
                        example: 100
    post:
      summary: Add a new group
      description: Description
      operationId: addGroup
      tags:
        - Groups
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: My Group
                limits:
                  type: object
                  properties:
                    contacts:
                      type: object
                      properties:
                        no_duplicates:
                          type: boolean
                        no_duplicates_in_any_group:
                          type: boolean
                    messages:
                      type: object
                      properties:
                        max:
                          type: integer
                        period:
                          type: string
                          enum:
                            - d
                            - w
                            - m
                            - q
                            - hy
                            - 'y'
                        include_reminders:
                          type: boolean
                    filter:
                      type: object
                      properties:
                        tag:
                          type: string
                          nullable: true
                          example: ''
                        value:
                          type: string
                          nullable: true
                          example: ''
                smart_fields:
                  type: object
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/group.v1.yaml
          links:
            GetGroupById:
              operationId: getGroup
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.
            UpdateGroupById:
              operationId: updateGroup
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `PUT /groups/{id}`.
            DeleteGroupById:
              operationId: deleteGroup
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `DELETE /groups/{id}`.
  '/groups/{id}':
    get:
      summary: Retrieve a group
      description: Description
      operationId: getGroup
      tags:
        - Groups
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
        - in: path
          name: id
          description: id of the group
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Group response
          content:
            application/json:
              schema:
                $ref: ./models/group.v1.yaml
          links:
            UpdateGroupById:
              operationId: updateGroup
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `PUT /groups/{id}`.
            DeleteGroupById:
              operationId: deleteGroup
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `DELETE /groups/{id}`.
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Update a group
      description: Description
      operationId: updateGroup
      tags:
        - Groups
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
        - in: path
          name: id
          description: id of the group
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - first_name
                - last_name
                - email
              properties:
                name:
                  type: string
                  example: My Group
                limits:
                  type: object
                  properties:
                    contacts:
                      type: object
                      properties:
                        no_duplicates:
                          type: boolean
                        no_duplicates_in_any_group:
                          type: boolean
                    messages:
                      type: object
                      properties:
                        max:
                          type: integer
                        period:
                          type: string
                          enum:
                            - d
                            - w
                            - m
                            - q
                            - hy
                            - 'y'
                        include_reminders:
                          type: boolean
                    filter:
                      type: object
                      properties:
                        tag:
                          type: string
                          nullable: true
                          example: ''
                        value:
                          type: string
                          nullable: true
                          example: ''
                smart_fields:
                  type: object
      responses:
        '204':
          description: Group updated response
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a group
      description: Description
      operationId: deleteGroup
      tags:
        - Groups
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
        - in: path
          name: id
          description: id of the group
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Group deleted response
        '404':
          $ref: '#/components/responses/404'
  /users:
    get:
      summary: List of users
      tags:
        - Users
      responses: {}
      operationId: get-users
    post:
      summary: Add a new user
      tags:
        - Users
      responses: {}
      operationId: post-users
  '/users/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Retrieve a user
      tags:
        - Users
      responses: {}
      operationId: get-users-id
    put:
      summary: Update a user
      tags:
        - Users
      responses: {}
      operationId: put-users
    delete:
      summary: Delete a user
      tags:
        - Users
      responses: {}
      operationId: delete-users-id
  /teams:
    get:
      summary: List of teams
      tags:
        - Teams
      responses: {}
      operationId: get-teams
    post:
      summary: Add a new team
      tags:
        - Teams
      responses: {}
      operationId: post-teams
  '/teams/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Retrieve a team
      tags:
        - Teams
      responses: {}
      operationId: get-teams-id
    put:
      summary: Update a team
      tags:
        - Teams
      responses: {}
      operationId: put-teams
    delete:
      summary: Delete a team
      tags:
        - Teams
      responses: {}
      operationId: delete-teams-id
  /webhooks:
    get:
      summary: List of webhooks
      tags:
        - Webhooks
      responses: {}
      operationId: get-webhooks
    post:
      summary: Add a new webhook
      tags:
        - Webhooks
      responses: {}
      operationId: post-webhooks
  '/webhooks/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Retrieve a webhook
      tags:
        - Webhooks
      responses: {}
      operationId: get-webhooks-id
    put:
      summary: Update a webhook
      tags:
        - Webhooks
      responses: {}
      operationId: put-webhooks-id
    delete:
      summary: Delete a webhook
      tags:
        - Webhooks
      responses: {}
      operationId: delete-webhooks-id
  /accounts:
    get:
      summary: List of accounts
      tags:
        - Accounts
      responses: {}
      operationId: get-accounts
  '/accounts/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Retrieve an account
      tags:
        - Accounts
      responses: {}
      operationId: get-accounts-id
  /messages:
    get:
      summary: List of messages
      tags:
        - Messages
      responses: {}
      operationId: get-messages
  '/messages/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Retrieve a message
      tags:
        - Messages
      responses: {}
      operationId: get-messages-id
  /feedback:
    get:
      summary: List of feedback
      tags:
        - Feedback
      responses: {}
      operationId: get-feedback
  '/feedback/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Retrieve a feedback item
      tags:
        - Feedback
      responses: {}
      operationId: get-feedback-id
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  headers:
    X-Total-Count:
      schema:
        type: integer
      example: 40
    X-RateLimit-Limit:
      description: Request limit per hour
      schema:
        type: integer
      example: 60
    X-RateLimit-Remaining:
      schema:
        type: integer
      example: 58
  parameters:
    pageParam:
      name: page
      in: query
      description: Current page
      required: false
      example: 1
      allowEmptyValue: true
      schema:
        type: integer
        format: int32
    showParam:
      name: show
      in: query
      description: Amount of items returned by the request
      required: false
      allowEmptyValue: true
      example: 5
      schema:
        type: integer
        format: int32
    contentTypeParam:
      in: header
      name: Content-Type
      schema:
        type: string
        example: application/json
        default: application/json
      required: true
    acceptParam:
      in: header
      name: Accept
      schema:
        type: string
        example: application/json
        default: application/json
      required: true
  responses:
    '404':
      description: Not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Not found
