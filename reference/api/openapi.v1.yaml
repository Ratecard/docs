tchopenapi: 3.0.3
info:
  version: 0.2.0
  title: Ratecard API
  description: 'Integrate Ratecard directly with your applications through via the Ratecard [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer) API. In this documentation you will find all the resources you''ll need to connect to our API.'
  contact:
    name: Ratecard Support
    url: 'https://support.ratecard.io/'
    email: support@ratecard.io
  termsOfService: 'https://ratecard.io/general-terms'
servers:
  - url: 'https://api.ratecard.io/v1'
security:
  - bearerAuth: []
tags:
  - name: Contacts
  - name: Groups
  - name: Accounts
  - name: Teams
  - name: Users
  - name: Webhooks
  - name: Messages
  - name: Feedback
paths:
  /contacts:
    get:
      summary: List of contacts
      description: This endpoint retrieves a list of contacts from your account.
      operationId: listContacts
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/showParam'
      responses:
        '200':
          description: Paginated contact response
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: ./models/contact.v1.yaml
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'https://api.ratecard.io/v1/contacts?page=1'
                      last:
                        type: string
                        example: 'https://api.ratecard.io/v1/contacts?page=100'
                      prev:
                        type: string
                        nullable: true
                        example: 'https://api.ratecard.io/v1/contacts?page=1'
                      next:
                        type: string
                        nullable: true
                        example: 'https://api.ratecard.io/v1/contacts?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 2
                      from:
                        type: integer
                        example: 2
                      last_page:
                        type: integer
                        example: 10
                      path:
                        type: string
                        example: 'https://api.ratecard.io/v1/contacts'
                      per_page:
                        type: integer
                        example: 1
                      to:
                        type: integer
                        example: 2
                      total:
                        type: integer
                        example: 100
              examples:
                Example:
                  value:
                    data:
                      - id: ea10916d-0684-4624-9d07-d341193554cf
                        first_name: John
                        last_name: Doe
                        email: johndoe@ratecard.io
                        phone: '0612345678'
                        subscribed: true
                        unsubscribe_date: null
                        anonymous: false
                        external_type: Contact
                        external_id: ea10916d-0684-4624-9d07-d341193554cf
                        synced_at: '2020-11-25T09:33:14.000000Z'
                        groups:
                          - id: ea10916d-0684-4624-9d07-d341193554cf
                            name: My Group
                            smart_fields:
                              owner:
                                id: ea10916d-0684-4624-9d07-d341193554cf
                                name: John Doe
                                email: johndoe@ratecard.io
                              team:
                                id: ea10916d-0684-4624-9d07-d341193554cf
                                name: My Team
                                email: myteam@ratecard.io
                              notes: John Doe is an example for us all.
                              credits: 154325
                              time_of_arrival: '09:33:14.000000Z'
                              date_of_arrival: '2020-11-25'
                              datetime_of_arrival: '2020-11-25T09:33:14.000000Z'
                              locale: en
                        embed_url: 'https://ratecard.io/embed/contacts/ea10916d-0684-4624-9d07-d341193554cf?access_token=<access_token>'
                        created_at: '2020-11-25T09:33:14.000000Z'
                        updated_at: '2020-11-25T09:33:14.000000Z'
                    links:
                      first: 'https://api.ratecard.io/v1/contacts?page=1'
                      last: 'https://api.ratecard.io/v1/contacts?page=100'
                      prev: 'https://api.ratecard.io/v1/contacts?page=1'
                      next: 'https://api.ratecard.io/v1/contacts?page=2'
                    meta:
                      current_page: 2
                      from: 2
                      last_page: 10
                      path: 'https://api.ratecard.io/v1/contacts'
                      per_page: 1
                      to: 2
                      total: 100
    post:
      summary: Add a new contact
      description: 'This endpoint is used to add a contact to the account. '
      operationId: addContact
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: John
                  description: The contact's first name
                last_name:
                  type: string
                  example: Doe
                  description: The contact's last name
                name:
                  type: string
                  description: 'Alternative to first and last name, can be used instead'
                  example: John Doe
                email:
                  type: string
                  example: johndoe@ratecard.io
                  description: The contact's email address
                phone:
                  type: string
                  example: '0612345678'
                  description: The contact's phone number
                subscribed:
                  type: boolean
                  example: true
                  description: Subscribe the contact to be able to send them mail and texts
                anonymous:
                  type: boolean
                  example: false
                  description: Make the contact anonymous
                groups:
                  type: array
                  description: Add the contact to one or many groups with smart fields (see examples)
                  items:
                    anyOf:
                      - properties:
                          id:
                            type: string
                            format: uuid
                            example: ea10916d-0684-4624-9d07-d341193554cf
                            description: group id
                        description: Add to group by group id
                        required:
                          - id
                      - properties:
                          name:
                            type: string
                            example: My Group
                            description: Group name
                        description: Add to group by group name (creates new group if group not found)
                        required:
                          - name
                    description: Different ways to add a contact to a group
                    type: object
              required:
                - email
            examples:
              Example 1:
                value:
                  first_name: John
                  last_name: Doe
                  email: johndoe@ratecard.io
                  phone: '0612345678'
                  subscribed: true
                  anonymous: false
                  groups:
                    - id: ea10916d-0684-4624-9d07-d341193554cf
                      owner: johndoe@ratecard.io
                      notes: John Doe is an example for us all.
                      credits: 154325
                      time_of_arrival: '09:33:14.000000Z'
                      date_of_arrival: '2020-11-25'
                      datetime_of_arrival: '2020-11-25T09:33:14.000000Z'
                      locale: en
              Example 2:
                value:
                  name: John Doe
                  email: johndoe@ratecard.io
                  phone: '0612345678'
                  subscribed: true
                  anonymous: false
                  groups:
                    - name: My Group
                      owner: ea10916d-0684-4624-9d07-d341193554cf
                      notes: John Doe is an example for us all.
                      credits: 154325
                      time_of_arrival: '09:33:14.000000Z'
                      date_of_arrival: '2020-11-25'
                      datetime_of_arrival: '2020-11-25T09:33:14.000000Z'
                      locale: en
              Example 3:
                value:
                  name: 'Doe, John'
                  email: johndoe@ratecard.io
                  phone: '0612345678'
                  subscribed: true
                  anonymous: false
                  groups:
                    - id: ea10916d-0684-4624-9d07-d341193554cf
                      owner: John Doe
                      notes: John Doe is an example for us all.
                      credits: 154325
                      time_of_arrival: '09:33:14.000000Z'
                      date_of_arrival: '2020-11-25'
                      datetime_of_arrival: '2020-11-25T09:33:14.000000Z'
                      locale: en
        description: |-
          Contacts can be added in a few ways. The endpoint is very flexible in how it accepts the data to be able to process as many use cases as possible. 

          A contact's name can be added in 3 different ways for example:
          1. With their first and last name in separate keys
          2. With their first and last name with a space in between
          3. Wit their last name first and then a comma plus space, followed by their first name

          How a contact is added to a group is also very flexible. A contact can be added to a group with the group id or name of the group present in the object. The rest of the keys given to group objects are smart fields by name and value pairs.

          _See the example request bodies to gain a better view of this flexibility._
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/contact.v1.yaml
              examples:
                Example:
                  value:
                    id: ea10916d-0684-4624-9d07-d341193554cf
                    first_name: John
                    last_name: Doe
                    email: johndoe@ratecard.io
                    phone: '0612345678'
                    subscribed: true
                    unsubscribe_date: null
                    anonymous: false
                    external_type: Contact
                    external_id: ea10916d-0684-4624-9d07-d341193554cf
                    synced_at: '2020-11-25T09:33:14.000000Z'
                    groups:
                      - id: ea10916d-0684-4624-9d07-d341193554cf
                        name: My Group
                        smart_fields:
                          owner:
                            id: ea10916d-0684-4624-9d07-d341193554cf
                            name: John Doe
                            email: johndoe@ratecard.io
                          team:
                            id: ea10916d-0684-4624-9d07-d341193554cf
                            name: My Team
                            email: myteam@ratecard.io
                          notes: John Doe is an example for us all.
                          credits: 154325
                          time_of_arrival: '09:33:14.000000Z'
                          date_of_arrival: '2020-11-25'
                          datetime_of_arrival: '2020-11-25T09:33:14.000000Z'
                          locale: en
                    embed_url: 'https://ratecard.io/embed/contacts/ea10916d-0684-4624-9d07-d341193554cf?access_token=<access_token>'
                    created_at: '2020-11-25T09:33:14.000000Z'
                    updated_at: '2020-11-25T09:33:14.000000Z'
          links:
            GetContactById:
              operationId: getContact
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `GET /contacts/{id}`.
            UpdateContactById:
              operationId: updateContact
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `PUT /contacts/{id}`.
            DeleteContactById:
              operationId: deleteContact
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `DELETE /contacts/{id}`.
        '422':
          $ref: '#/components/responses/422'
  '/contacts/{id}':
    get:
      summary: Retrieve a contact
      description: This endpoints retrieves a contact based on their identifier.
      operationId: getContact
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
        - $ref: '#/components/parameters/fieldsparam'
      responses:
        '200':
          description: Contact response
          content:
            application/json:
              schema:
                $ref: ./models/contact.v1.yaml
              examples:
                Example:
                  value:
                    id: ea10916d-0684-4624-9d07-d341193554cf
                    first_name: John
                    last_name: Doe
                    email: johndoe@ratecard.io
                    phone: '0612345678'
                    subscribed: true
                    unsubscribe_date: null
                    anonymous: false
                    external_type: Contact
                    external_id: ea10916d-0684-4624-9d07-d341193554cf
                    synced_at: '2020-11-25T09:33:14.000000Z'
                    groups:
                      - id: ea10916d-0684-4624-9d07-d341193554cf
                        name: My Group
                        smart_fields:
                          owner:
                            id: ea10916d-0684-4624-9d07-d341193554cf
                            name: John Doe
                            email: johndoe@ratecard.io
                          team:
                            id: ea10916d-0684-4624-9d07-d341193554cf
                            name: My Team
                            email: myteam@ratecard.io
                          notes: John Doe is an example for us all.
                          credits: 154325
                          time_of_arrival: '09:33:14.000000Z'
                          date_of_arrival: '2020-11-25'
                          datetime_of_arrival: '2020-11-25T09:33:14.000000Z'
                          locale: en
                    embed_url: 'https://ratecard.io/embed/contacts/ea10916d-0684-4624-9d07-d341193554cf?access_token=<access_token>'
                    created_at: '2020-11-25T09:33:14.000000Z'
                    updated_at: '2020-11-25T09:33:14.000000Z'
          links:
            UpdateContactById:
              operationId: updateContact
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `PUT /contacts/{id}`.
            DeleteContactById:
              operationId: deleteContact
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `DELETE /contacts/{id}`.
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Update a contact
      description: This endpoint is used to update a contact without group related information.
      operationId: updateContact
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: John
                  description: The contact's first name
                last_name:
                  type: string
                  example: Doe
                  description: The contact's last name
                name:
                  type: string
                  description: 'Alternative to first and last name, can be used instead'
                  example: John Doe
                email:
                  type: string
                  example: johndoe@ratecard.io
                  description: The contact's email address
                phone:
                  type: string
                  example: '0612345678'
                  description: The contact's phone number
                subscribed:
                  type: boolean
                  example: true
                  description: Subscribe the contact to be able to send them mail and texts
                anonymous:
                  type: boolean
                  example: false
                  description: Make the contact anonymous
              required:
                - email
            examples:
              Example 1:
                value:
                  first_name: John
                  last_name: Doe
                  email: johndoe@ratecard.io
                  phone: '0612345678'
                  subscribed: true
                  anonymous: false
              Example 2:
                value:
                  name: John Doe
                  email: johndoe@ratecard.io
                  phone: '0612345678'
                  subscribed: true
                  anonymous: false
              Example 3:
                value:
                  name: 'Doe, John'
                  email: johndoe@ratecard.io
                  phone: '0612345678'
                  subscribed: true
                  anonymous: false
        description: |-
          Similar to the contacts create endpoint, only without the group functionality as this process is handled in the group scoped contact endpoints. The big difference is how the anonymous property is handled. Once a contact is anonymous in our system it will remain anonymous in order to protect their anonimity, meaning a contact can only be anonymized in this endpoint and not the other way around.

          A contact's name can be added in 3 different ways for example:
          1. With their first and last name in separate keys
          2. With their first and last name with a space in between
          3. Wit their last name first and then a comma plus space, followed by their first name
      responses:
        '204':
          description: Contact updated response
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a contact
      description: This endpoint is used to delete a contact from your account.
      operationId: deleteContact
      tags:
        - Contacts
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
      responses:
        '200':
          $ref: '#/components/responses/200-(deleted)'
        '404':
          $ref: '#/components/responses/404'
    parameters:
      - schema:
          type: string
          format: uuid
          example: ea10916d-0684-4624-9d07-d341193554cf
        name: id
        in: path
        required: true
        description: id of the contact
  /groups:
    get:
      summary: List of groups
      description: This endpoint retrieves a list of groups from your account.
      operationId: listGroups
      tags:
        - Groups
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/showParam'
      responses:
        '200':
          description: Paginated group response
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: ./models/group.v1.yaml
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'https://api.ratecard.io/v1/groups?page=1'
                      last:
                        type: string
                        example: 'https://api.ratecard.io/v1/groups?page=100'
                      prev:
                        type: string
                        nullable: true
                        example: 'https://api.ratecard.io/v1/groups?page=1'
                      next:
                        type: string
                        nullable: true
                        example: 'https://api.ratecard.io/v1/groups?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 2
                      from:
                        type: integer
                        example: 2
                      last_page:
                        type: integer
                        example: 10
                      path:
                        type: string
                        example: 'https://api.ratecard.io/v1/groups'
                      per_page:
                        type: integer
                        example: 1
                      to:
                        type: integer
                        example: 2
                      total:
                        type: integer
                        example: 100
              examples:
                Example:
                  value:
                    data:
                      - id: ea10916d-0684-4624-9d07-d341193554cf
                        name: My Group
                        limits:
                          contacts:
                            no_duplicates: true
                            no_duplicates_in_any_group: false
                          messages:
                            max: 2
                            period: d
                            include_reminders: false
                          filter:
                            tag: locale
                            value: nl
                        smart_fields:
                          - type: user
                            name: owner
                            slug: owner
                            value: support@ratecard.io
                            created_at: '2020-11-25T09:33:14.000000Z'
                            updated_at: '2020-11-25T09:33:14.000000Z'
                        created_at: '2020-11-25T09:33:14.000000Z'
                        updated_at: '2020-11-25T09:33:14.000000Z'
                    links:
                      first: 'https://api.ratecard.io/v1/groups?page=1'
                      last: 'https://api.ratecard.io/v1/groups?page=100'
                      prev: 'https://api.ratecard.io/v1/groups?page=1'
                      next: 'https://api.ratecard.io/v1/groups?page=2'
                    meta:
                      current_page: 2
                      from: 2
                      last_page: 10
                      path: 'https://api.ratecard.io/v1/groups'
                      per_page: 1
                      to: 2
                      total: 100
    post:
      summary: Add a new group
      description: Description
      operationId: addGroup
      tags:
        - Groups
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the group
                  type: string
                  example: My Group
                limits:
                  description: Rules for limiting message sends and adding contacts to the groups
                  type: object
                  properties:
                    contacts:
                      description: Filters that determine if an existing contact can be added to the group
                      type: object
                      properties:
                        no_duplicates:
                          description: (Dis)allow contacts that already exist in *this* group to be added to the group
                          type: boolean
                          example: true
                        no_duplicates_in_any_group:
                          description: (Dis)allow contacts that already exist in *any* group to be added to the group
                          type: boolean
                          nullable: true
                          example: false
                    messages:
                      description: Controls the rate and frequency of which messages can be sent to contacts of the group
                      type: object
                      properties:
                        max:
                          description: Maximum amount of messages per the defined period (frequency)
                          type: integer
                          example: 2
                        period:
                          description: The frequency period to limit message sends on
                          type: string
                          enum:
                            - d
                            - w
                            - m
                            - q
                            - hy
                            - 'y'
                          example: d
                        include_reminders:
                          description: Include reminder messages in the check
                          type: boolean
                          example: false
                    filter:
                      description: Determines whether a contact can be added or not
                      type: object
                      properties:
                        tag:
                          description: The tag the group filters on when adding contacts
                          type: string
                          nullable: true
                          example: locale
                        value:
                          description: The value that the group tag filter must find to allow a contact to be stored
                          type: string
                          nullable: true
                          example: nl
                smart_fields:
                  anyOf:
                    - type: array
                      description: Array of smart field objects
                      items:
                        type: object
                        description: Smart field object
                        properties:
                          type:
                            type: string
                            example: text
                            enum:
                              - datetime
                              - date
                              - time
                              - number
                              - text
                              - user
                              - team
                              - language
                            description: Smart field type
                          name:
                            type: string
                            example: My smart field
                            description: Smart field name
                          value:
                            type: string
                            description: Smart field value
                            example: My value
                    - type: object
                      description: Smart field key value object
                      properties:
                        field_name:
                          type: string
                          description: Example field
                  description: Array or object of smart fields
              required:
                - name
            examples:
              Example 1:
                value:
                  name: My Group
                  limits:
                    contacts:
                      no_duplicates: true
                      no_duplicates_in_any_group: true
                    messages:
                      max: 0
                      period: d
                      include_reminders: true
                    filter:
                      tag: ''
                      value: ''
                  smart_fields:
                    - type: text
                      name: My smart field
                      value: My value
              Example 2:
                value:
                  name: My Group
                  limits:
                    contacts:
                      no_duplicates: true
                      no_duplicates_in_any_group: true
                    messages:
                      max: 0
                      period: d
                      include_reminders: true
                    filter:
                      tag: ''
                      value: ''
                  smart_fields:
                    my_smart_field: My value
        description: |-
          Just like with the contact endpoint(s). The group endpoint(s) have some built in flexibility regarding the smart fields. There's 2 ways a smart field can be added.

          The first way is by adding an object to the smart field array with the properties: name, type and value. This way you have full control over how the system processes the new smart field.

          The second way is by name and value just like on the contacts endpoints. Our API checks which type of data your name value pair(s) contain(s). When it can't figure out what type of data the field contains it will default to a text field. 

          _See the example request bodies to gain a better view of this flexibility._
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./models/group.v1.yaml
              examples:
                Example:
                  value:
                    id: ea10916d-0684-4624-9d07-d341193554cf
                    name: My Group
                    limits:
                      contacts:
                        no_duplicates: true
                        no_duplicates_in_any_group: false
                      messages:
                        max: 2
                        period: d
                        include_reminders: false
                      filter:
                        tag: locale
                        value: nl
                    smart_fields:
                      - type: user
                        name: owner
                        slug: owner
                        value: support@ratecard.io
                        created_at: '2020-11-25T09:33:14.000000Z'
                        updated_at: '2020-11-25T09:33:14.000000Z'
                    created_at: '2020-11-25T09:33:14.000000Z'
                    updated_at: '2020-11-25T09:33:14.000000Z'
          links:
            GetGroupById:
              operationId: getGroup
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.
            UpdateGroupById:
              operationId: updateGroup
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `PUT /groups/{id}`.
            DeleteGroupById:
              operationId: deleteGroup
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `DELETE /groups/{id}`.
        '422':
          $ref: '#/components/responses/422'
  '/groups/{id}':
    get:
      summary: Retrieve a group
      description: This endpoint retrieves a single group based on their identifier from your account.
      operationId: getGroup
      tags:
        - Groups
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
      responses:
        '200':
          description: Group response
          content:
            application/json:
              schema:
                $ref: ./models/group.v1.yaml
          links:
            UpdateGroupById:
              operationId: updateGroup
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `PUT /groups/{id}`.
            DeleteGroupById:
              operationId: deleteGroup
              parameters:
                id: $response.body#/id
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `DELETE /groups/{id}`.
        '404':
          $ref: '#/components/responses/404'
    put:
      summary: Update a group
      description: This endpoint updates the enitre group based on the identifier and data given in the request body.
      operationId: updateGroup
      tags:
        - Groups
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - first_name
                - last_name
                - email
              properties:
                name:
                  type: string
                  example: My Group
                limits:
                  type: object
                  properties:
                    contacts:
                      type: object
                      properties:
                        no_duplicates:
                          type: boolean
                        no_duplicates_in_any_group:
                          type: boolean
                    messages:
                      type: object
                      properties:
                        max:
                          type: integer
                        period:
                          type: string
                          enum:
                            - d
                            - w
                            - m
                            - q
                            - hy
                            - 'y'
                        include_reminders:
                          type: boolean
                    filter:
                      type: object
                      properties:
                        tag:
                          type: string
                          nullable: true
                          example: ''
                        value:
                          type: string
                          nullable: true
                          example: ''
                smart_fields:
                  type: object
        description: |-
          Just like with the contact endpoint(s). The group endpoint(s) have some built in flexibility regarding the smart fields. There's 2 ways a smart field can be added.

          The first way is by adding an object to the smart field array with the properties: name, type and value. This way you have full control over how the system processes the new smart field.

          The second way is by name and value just like on the contacts endpoints. Our API checks which type of data your name value pair(s) contain(s). When it can't figure out what type of data the field contains it will default to a text field.

          _See the example request bodies to gain a better view of this flexibility._

          <!-- theme: warning -->
          > Do not forget that this is a `PUT` request. 
          > 
          > When smart fields are given through this request all smart fields not present in the request will be removed from the group.
      responses:
        '204':
          description: Group updated response
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: Delete a group
      description: Description
      operationId: deleteGroup
      tags:
        - Groups
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
      responses:
        '204':
          description: Group deleted response
        '404':
          $ref: '#/components/responses/404'
    
  /users:
    get:
      description: Description
      summary: List of users
      tags:
        - Users
      responses:
        '200':
          description: Description
      operationId: get-users
    post:
      description: Description
      summary: Add a new user
      tags:
        - Users
      responses:
        '200':
          description: Description
      operationId: post-users
  '/users/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      description: Description
      summary: Retrieve a user
      tags:
        - Users
      responses:
        '200':
          description: Description
      operationId: get-users-id
    put:
      description: Description
      summary: Update a user
      tags:
        - Users
      responses:
        '200':
          description: Description
      operationId: put-users
    delete:
      description: Description
      summary: Delete a user
      tags:
        - Users
      responses:
        '200':
          description: Description
      operationId: delete-users-id
  /teams:
    get:
      description: Description
      summary: List of teams
      tags:
        - Teams
      responses:
        '200':
          description: Description
      operationId: get-teams
    post:
      description: Description
      summary: Add a new team
      tags:
        - Teams
      responses:
        '200':
          description: Description
      operationId: post-teams
  '/teams/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      description: Description
      summary: Retrieve a team
      tags:
        - Teams
      responses:
        '200':
          description: Description
      operationId: get-teams-id
    put:
      description: Description
      summary: Update a team
      tags:
        - Teams
      responses:
        '200':
          description: Description
      operationId: put-teams
    delete:
      description: Description
      summary: Delete a team
      tags:
        - Teams
      responses:
        '200':
          description: Description
      operationId: delete-teams-id
  /webhooks:
    get:
      description: Description
      summary: List of webhooks
      tags:
        - Webhooks
      responses:
        '200':
          description: Description
      operationId: get-webhooks
    post:
      description: Description
      summary: Add a new webhook
      tags:
        - Webhooks
      responses:
        '200':
          description: Description
      operationId: post-webhooks
  '/webhooks/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      description: Description
      summary: Retrieve a webhook
      tags:
        - Webhooks
      responses:
        '200':
          description: Description
      operationId: get-webhooks-id
    put:
      description: Description
      summary: Update a webhook
      tags:
        - Webhooks
      responses:
        '200':
          description: Description
      operationId: put-webhooks-id
    delete:
      description: Description
      summary: Delete a webhook
      tags:
        - Webhooks
      responses:
        '200':
          description: Description
      operationId: delete-webhooks-id
  /accounts:
    get:
      summary: List of accounts
      description: This endpoint retrieves a list of accounts the access token's owner belongs to.
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/showParam'
      responses:
        '200':
          description: Paginated account response
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: ./models/account.v1.yaml
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'https://api.ratecard.io/v1/accounts?page=1'
                      last:
                        type: string
                        example: 'https://api.ratecard.io/v1/accounts?page=100'
                      prev:
                        type: string
                        nullable: true
                        example: 'https://api.ratecard.io/v1/accounts?page=1'
                      next:
                        type: string
                        nullable: true
                        example: 'https://api.ratecard.io/v1/accounts?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 2
                      from:
                        type: integer
                        example: 2
                      last_page:
                        type: integer
                        example: 10
                      path:
                        type: string
                        example: 'https://api.ratecard.io/v1/accounts'
                      per_page:
                        type: integer
                        example: 1
                      to:
                        type: integer
                        example: 2
                      total:
                        type: integer
                        example: 100
              examples:
                Example:
                  value:
                    data:
                      - id: ea10916d-0684-4624-9d07-d341193554cf
                        name: Ratecard
                        public: false
                        general:
                          website: 'https://ratecard.io/'
                          phone: +31 6 123 45 678
                          address: Jisperweg 2
                          zip_code: 1463 ND
                          city: Noordbeemster
                          country: NL
                          description: ''
                          company_size: 2-10
                          industries:
                            - Staffing and Recruiting
                          profiles:
                            facebook: 'https://www.facebook.com/ratecardio'
                            twiter: 'https://twitter.com/ratecardio'
                            linkedin: 'https://www.linkedin.com/company/10642017'
                            glassdoor: ''
                          review_urls:
                            google: ''
                            indeed: ''
                            glassdoor: ''
                            facebook: ''
                        branding:
                          logo: 'https://ratecard.io/img/accounts/profile/ratecard-49029.png'
                          header: 'https://ratecard.io/img/accounts/header_image/ratecard-613524.png'
                          forms:
                            logo: 'https://ratecard.io/img/accounts/profile/ratecard-49029.png'
                            colors:
                              navigation: '#1d8bdf'
                              background: '#ffffff'
                              buttons: '#1d8bdf'
                          campaigns:
                            logo: 'https://ratecard.io/img/accounts/profile/ratecard-49029.png'
                            colors:
                              primary: '#1d8bdf'
                              secondary: '#ffffff'
                              tertiary: '#1d8bdf'
                        limits:
                          messages:
                            max: 2
                            period: d
                            include_reminders: false
                          allowed_domains: 'ratecard.io, ratecard.info, etc...'
                        source: Bullhorn
                        date_last_login: '2020-11-25T09:33:14.000000Z'
                        access_token: string
                        created_at: '2020-11-25T09:33:14.000000Z'
                        updated_at: '2020-11-25T09:33:14.000000Z'
                    links:
                      first: 'https://api.ratecard.io/v1/accounts?page=1'
                      last: 'https://api.ratecard.io/v1/accounts?page=100'
                      prev: 'https://api.ratecard.io/v1/accounts?page=1'
                      next: 'https://api.ratecard.io/v1/accounts?page=2'
                    meta:
                      current_page: 2
                      from: 2
                      last_page: 10
                      path: 'https://api.ratecard.io/v1/accounts'
                      per_page: 1
                      to: 2
                      total: 100
          headers: {}
      operationId: get-accounts
  '/accounts/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
          example: ea10916d-0684-4624-9d07-d341193554cf
        name: id
        in: path
        required: true
        description: id of the account
    get:
      summary: Retrieve an account
      description: 'This enpoint retrieves a single account the access token''s owner belongs to based on it''s identifier. '
      operationId: get-accounts-id
      tags:
        - Accounts
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
        - $ref: '#/components/parameters/fieldsparam'
      responses:
        '200':
          description: Account response
          content:
            application/json:
              schema:
                $ref: ./models/account.v1.yaml
              examples:
                Example:
                  value:
                    id: ea10916d-0684-4624-9d07-d341193554cf
                    name: Ratecard
                    public: false
                    general:
                      website: 'https://ratecard.io/'
                      phone: +31 6 123 45 678
                      address: Jisperweg 2
                      zip_code: 1463 ND
                      city: Noordbeemster
                      country: NL
                      description: ''
                      company_size: 2-10
                      industries:
                        - Staffing and Recruiting
                      profiles:
                        facebook: 'https://www.facebook.com/ratecardio'
                        twiter: 'https://twitter.com/ratecardio'
                        linkedin: 'https://www.linkedin.com/company/10642017'
                        glassdoor: ''
                      review_urls:
                        google: ''
                        indeed: ''
                        glassdoor: ''
                        facebook: ''
                    branding:
                      logo: 'https://ratecard.io/img/accounts/profile/ratecard-49029.png'
                      header: 'https://ratecard.io/img/accounts/header_image/ratecard-613524.png'
                      forms:
                        logo: 'https://ratecard.io/img/accounts/profile/ratecard-49029.png'
                        colors:
                          navigation: '#1d8bdf'
                          background: '#ffffff'
                          buttons: '#1d8bdf'
                      campaigns:
                        logo: 'https://ratecard.io/img/accounts/profile/ratecard-49029.png'
                        colors:
                          primary: '#1d8bdf'
                          secondary: '#ffffff'
                          tertiary: '#1d8bdf'
                    limits:
                      messages:
                        max: 2
                        period: d
                        include_reminders: false
                      allowed_domains: 'ratecard.io, ratecard.info, etc...'
                    source: Bullhorn
                    date_last_login: '2020-11-25T09:33:14.000000Z'
                    access_token: string
                    created_at: '2020-11-25T09:33:14.000000Z'
                    updated_at: '2020-11-25T09:33:14.000000Z'
          headers: null
        '404':
          $ref: '#/components/responses/404'
  /messages:
    get:
      description: Description
      summary: List of messages
      tags:
        - Messages
      responses:
        '200':
          description: Description
      operationId: get-messages
  '/messages/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      description: Description
      summary: Retrieve a message
      tags:
        - Messages
      responses:
        '200':
          description: Description
      operationId: get-messages-id
  /feedback:
    get:
      description: This endpoint retrieves a list of the feedback in your account.
      summary: List of feedback
      tags:
        - Feedback
      parameters:
        - $ref: '#/components/parameters/acceptParam'
        - $ref: '#/components/parameters/contentTypeParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/showParam'
      responses:
        '200':
          description: Paginated feedback response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ./models/feedback.v1.yaml
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'https://api.ratecard.io/v1/feedback?page=1'
                      last:
                        type: string
                        example: 'https://api.ratecard.io/v1/feedback?page=100'
                      prev:
                        type: string
                        nullable: true
                        example: 'https://api.ratecard.io/v1/feedback?page=1'
                      next:
                        type: string
                        nullable: true
                        example: 'https://api.ratecard.io/v1/feedback?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 2
                      from:
                        type: integer
                        example: 2
                      last_page:
                        type: integer
                        example: 10
                      path:
                        type: string
                        example: 'https://api.ratecard.io/v1/feedback'
                      per_page:
                        type: integer
                        example: 1
                      to:
                        type: integer
                        example: 2
                      total:
                        type: integer
                        example: 100
              examples:
                Example:
                  value:
                    data:
                      - id: ea10916d-0684-4624-9d07-d341193554cf
                        review: true
                        anonymous: true
                        closed: false
                        respondent:
                          id: ea10916d-0684-4624-9d07-d341193554cf
                          first_name: John
                          last_name: Doe
                          email: johndoe@example.com
                          phone: '612345678'
                        form:
                          id: ea10916d-0684-4624-9d07-d341193554cf
                          name: My Form
                        answers:
                          - question_id: ea10916d-0684-4624-9d07-d341193554cf
                            required: true
                            hidden: false
                            title: How would you rate Ratecard?
                            type: rating
                            value: 9
                        replies:
                          - subject: Thank you for your response
                            message: We will make sure to forward your feedback to the right people in our organization.
                            by: John Doe
                        notes:
                          - subject: Valuable feedback!
                            message: With this kind of feedback we can improve ourselves so much! Could anyone pass this on to @JohnDoe so he can process it? I'll assign this feedback to them.
                            by: John Doe
                        assignee: null
                        score: 8.5
                        nps: 9
                        duration: 300
                        locale: NL
                        embed_url: 'https://ratecard.io/embed/feedback/ea10916d-0684-4624-9d07-d341193554cf?access_token=<access_token>'
                        created_at: '2020-11-25T09:33:14.000000Z'
                        updated_at: '2020-11-25T09:33:14.000000Z'
                        completed_at: '2020-11-25T09:33:14.000000Z'
                    links:
                      first: 'https://api.ratecard.io/v1/feedback?page=1'
                      last: 'https://api.ratecard.io/v1/feedback?page=100'
                      prev: 'https://api.ratecard.io/v1/feedback?page=1'
                      next: 'https://api.ratecard.io/v1/feedback?page=2'
                    meta:
                      current_page: 2
                      from: 2
                      last_page: 10
                      path: 'https://api.ratecard.io/v1/feedback'
                      per_page: 1
                      to: 2
                      total: 100
      operationId: get-feedback
  '/feedback/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
    get:
      description: This endpoint retrieves a single feedback item based on it's identifier.
      summary: Retrieve a feedback item
      tags:
        - Feedback
      responses:
        '200':
          description: Description
          content:
            application/json:
              schema:
                $ref: ./models/feedback.v1.yaml
              examples:
                Example:
                  value:
                    id: ea10916d-0684-4624-9d07-d341193554cf
                    review: true
                    anonymous: true
                    closed: false
                    respondent:
                      id: ea10916d-0684-4624-9d07-d341193554cf
                      first_name: John
                      last_name: Doe
                      email: johndoe@example.com
                      phone: '612345678'
                    form:
                      id: ea10916d-0684-4624-9d07-d341193554cf
                      name: My Form
                    answers:
                      - question_id: ea10916d-0684-4624-9d07-d341193554cf
                        required: true
                        hidden: false
                        title: How would you rate Ratecard?
                        type: rating
                        value: 9
                    replies:
                      - subject: Thank you for your response
                        message: We will make sure to forward your feedback to the right people in our organization.
                        by: John Doe
                    notes:
                      - subject: Valuable feedback!
                        message: With this kind of feedback we can improve ourselves so much! Could anyone pass this on to @JohnDoe so he can process it? I'll assign this feedback to them.
                        by: John Doe
                    assignee: null
                    score: 8.5
                    nps: 9
                    duration: 300
                    locale: NL
                    embed_url: 'https://ratecard.io/embed/feedback/ea10916d-0684-4624-9d07-d341193554cf?access_token=<access_token>'
                    created_at: '2020-11-25T09:33:14.000000Z'
                    updated_at: '2020-11-25T09:33:14.000000Z'
                    completed_at: '2020-11-25T09:33:14.000000Z'
      operationId: get-feedback-id
      parameters:
        - $ref: '#/components/parameters/fieldsparam'
  '/groups/{group_id}/contacts':
    parameters:
      - schema:
          type: string
        name: group_id
        in: path
        required: true
    get:
      description: Description
      summary: List of contacts in the group
      tags:
        - Groups
        - Contacts
      responses:
        '200':
          description: Description
      operationId: get-groups-group_id-contacts
    post:
      description: Description
      summary: Add a contact to the group
      tags:
        - Groups
        - Contacts
      responses: null
      operationId: post-groups-group_id-contacts
  '/groups/{group_id}/contacts/{contact_id}':
    parameters:
      - schema:
          type: string
        name: group_id
        in: path
        required: true
      - schema:
          type: string
        name: contact_id
        in: path
        required: true
    get:
      description: Description
      summary: Retrieve a contact from the group
      tags:
        - Groups
        - Contacts
      responses:
        '200':
          description: Description
      operationId: get-groups-group_id-contacts-contact_id
    put:
      description: Description
      summary: Update a contact in the group
      tags:
        - Groups
        - Contacts
      responses:
        '200':
          description: Description
      operationId: put-groups-group_id-contacts-contact_id
    delete:
      description: Description
      summary: Remove a contact from the group
      tags:
        - Groups
        - Contacts
      responses:
        '200':
          description: Description
      operationId: delete-groups-group_id-contacts-contact_id
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: ''
    API Key - 1:
      name: access_token
      type: apiKey
      in: query
      description: ''
    API Key - 2:
      name: Ratecard-AccessToken
      type: apiKey
      in: header
  parameters:
    pageParam:
      name: page
      in: query
      description: Current page
      required: false
      example: 1
      allowEmptyValue: true
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1
    showParam:
      name: show
      in: query
      description: Amount of items returned by the request
      required: false
      allowEmptyValue: true
      example: 5
      schema:
        type: integer
        format: int32
        maximum: 100
        minimum: 1
        exclusiveMinimum: true
        exclusiveMaximum: true
        default: 5
    contentTypeParam:
      in: header
      name: Content-Type
      schema:
        type: string
        example: application/json
        default: application/json
      required: true
    acceptParam:
      in: header
      name: Accept
      schema:
        type: string
        example: application/json
        default: application/json
      required: true
    X-Total-Count:
      in: header
      name: X-Total-Count
      description: Total item count in the response
      schema:
        type: integer
        example: 40
    X-RateLimit-Limit:
      description: Request limit per hour
      schema:
        type: integer
        example: 60
    X-RateLimit-Remaining:
      description: Time remaining till rate limit resets
      schema:
        type: integer
        example: 58
    fieldsparam:
      name: fields
      in: query
      schema:
        type: string
        example: 'first_name,last_name,email'
      description: Comma separated parameter to select specific fields only from the response.
      allowEmptyValue: true
  responses:
    '404':
      description: Entity not found response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Not found
          examples:
            Example:
              value:
                message: Entity not found!
    '422':
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: The error message
              errors:
                type: object
                description: An object that lists the unprocessable properties with an array of messages regarding the validation errors
          examples:
            Example:
              value:
                message: The given data was invalid.
                errors:
                  first_name:
                    - The first_name field is required.
                  email:
                    - The email must be a valid email address.
    200-(deleted):
      description: Entity deletion response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Entity has been deleted!
          examples:
            Example:
              value:
                message: Entity has been deleted!
